[tox]
isolated_build = True
envlist =
    py3{9,10,11}
    check-{style,security}
    pep517
    #test{,-oldestdeps,-devdeps}
    #test{,-cov}
    build-{docs,dist}

# tox environments are constructed with so-called 'factors' (or terms)
# separated by hyphens, e.g. test-devdeps-cov. Lines below starting with factor:
# will only take effect if that factor is included in the environment name. To
# see a list of example environments that can be run, along with a description,
# run:
#
#     tox -l -v
#

[testenv:check-style]
skip_install = true
changedir = .
description = check code style with ruff
deps = ruff
commands = ruff check . {posargs}

[testenv:check-security]
skip_install = true
changedir = .
description = security audit with bandit
deps = bandit>=1.7
commands = bandit -r spacekit -c .bandit.yml


[testenv:build-docs]
changedir = .
description = invoke sphinx-build to build the HTML docs
extras = docs
commands =
    sphinx-build docs/source docs/build

[testenv:build-dist]
description = check build sdist/wheel and a strict twine check for metadata
skip_install = true
changedir = .
deps =
    build
commands =
    python -m build

[testenv:pep517]
skip_install = true
changedir = .
description = PEP 517
deps =
    build
    twine
commands =
    python -m build --sdist .
    twine check dist/*


[testenv]
# Run the tests in a temporary directory to make sure that we don't import
# this package from the source tree
changedir = .tmp
deps = 
    pytest
    # pytest-xdist

## The following indicates which extras_require from setup.cfg will be installed
extras =
    x
    test
commands = 
    pytest \
    cov: --cov=. --cov-config=setup.cfg --cov-report=xml \
    xdist: -n auto \
    devdeps: astropy>=0.0.dev0
    {toxinidir} \
    {posargs}

## Suppress display of matplotlib plots generated during docs build, if any
setenv = 
    MPLBACKEND=agg
    TF_CPP_MIN_LOG_LEVEL=2
    devdeps: PIP_EXTRA_INDEX_URL = https://pypi.anaconda.org/astropy/simple

## Pass through the following environment variables which may be needed for the CI
passenv = 
    TOXENV
    CI
    CODECOV_*
    HOME
    WINDIR
    LC_ALL
    LC_CTYPE
    CC
    CI

description =
    run tests
    devdeps: with the latest developer version of key dependencies
    oldestdeps: with the oldest supported version of key dependencies
    # pyargs: with --pyargs on installed package
    warnings: treating warnings as errors
    cov: with coverage
    xdist: using parallel processing

[pytest]
python_files = test_*
python_classes = *Tests
python_functions = test_*
testpaths = tests
markers =
    jwst
    hst
    cal
    svm: marks tests as svm (deselect with '-m "not svm"')
    predict
    train
    prep
    generator
    draw
    preprocessor
    scrub
    encode
    transform
    extractor
    scrape
    radio
    analyzer
    scan
    explore
    compute
    architect
    builder
