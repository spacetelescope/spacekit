[tox]
envlist =
    py{37,38,39}-test{,-oldestdeps,-devdeps}{,-cov}
    linkcheck
    codestyle
    securityaudit
    pep517
requires =
    setuptools >= 42
    pip >= 19.3.1
isolated_build = true

[testenv]
# Suppress display of matplotlib plots generated during docs build, if any
setenv = MPLBACKEND=agg

# Pass through the following environment variables which may be needed for the CI
passenv = HOME WINDIR LC_ALL LC_CTYPE CC CI

# Run the tests in a temporary directory to make sure that we don't import
# this package from the source tree
changedir = .tmp/{envname}

# tox environments are constructed with so-called 'factors' (or terms)
# separated by hyphens, e.g. test-devdeps-cov. Lines below starting with factor:
# will only take effect if that factor is included in the environment name. To
# see a list of example environments that can be run, along with a description,
# run:
#
#     tox -l -v
#
description =
    run tests
    oldestdeps: with the oldest supported version of key dependencies
    devdeps: with the latest developer version of key dependencies
    cov: and test coverage

# The following provides some specific pinnings for key packages
deps =
    cov: coverage
    cov: pytest-cov

    #oldestdeps: numpy==1.21.*
    oldestdeps: astropy==4.0.3

    devdeps: git+https://github.com/astropy/astropy.git#egg=astropy

# The following indicates which extras_require from setup.cfg will be installed
extras =
    test

commands =
    pip freeze
    !cov: pytest --pyargs spacekit {toxinidir}/docs {posargs}
    cov: pytest --pyargs spacekit {toxinidir}/docs --cov spacekit --cov-config={toxinidir}/setup.cfg {posargs}
    cov: coverage xml -o {toxinidir}/coverage.xml

[pytest]
python_files = test_*
python_classes = *Tests
python_functions = test_*
testpaths = tests
markers =
    hst
    cal
    svm: marks tests as svm (deselect with '-m "not svm"')
    predict
    train
    prep
    generator
    draw
    preprocessor
    scrub
    encode
    transform
    extractor
    scrape
    radio
    analyzer
    scan
    explore
    compute
    architect
    builder

[testenv:x]
deps = 
    pytest
    moto
commands =
    pytest

[testenv:linkcheck]
changedir = docs
description = check the links in the HTML docs
extras = docs
commands =
    pip freeze
    sphinx-build -W -b linkcheck . _build/html

[testenv:codestyle]
skip_install = true
changedir = .
description = check code style with flake8
deps = flake8
commands = flake8 spacekit --count

[testenv:securityaudit]
skip_install = true
changedir = .
description = security audit with bandit
deps = bandit
commands = bandit -r spacekit -c .bandit.yaml

[testenv:pep517]
skip_install = true
changedir = .
description = PEP 517
deps =
    build
    twine
commands =
    python -m build --sdist .
    twine check dist/*