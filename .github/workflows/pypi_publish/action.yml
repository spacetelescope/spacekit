name: 'PyPi Publish'
description: 'Upload release to PyPI'
inputs:
  user:
    description: 'The username to use to publish to PyPI. Defaults to `__token__`.'
    required: false
    default: '__token__'
  password:
    description: 'The password to use to publish to PyPI'
    required: true
  test_user:
    description: 'The username to use when test is set to true. Uses the value of `user` if not provided.'
    required: false
  test_password:
    description: 'The password to use when test is set to true. Uses the value of `password` if not provided.'
    required: false
  test_repository_url:
    description: 'The PyPI repository URL to publish to when test is set to true. Defaults to `https://test.pypi.org/legacy/`'
    required: false
    default: 'https://test.pypi.org/legacy/'
  test:
    description: 'Whether to publish to the test repository or the production repository'
    required: false
    default: 'false'
  verify_metadata:
    description: 'Whether to check package metadata before uploading'
    required: false
    default: 'true'
  skip_existing:
    description: 'Do not fail if a Python package distribution exists in the target package index'
    required: false
    default: 'false'
  verbose:
    description: 'Show verbose output.'
    required: false
    default: 'false'

runs:
  using: 'composite'
  steps:
    # retrieve your distributions here
    - uses: actions/download-artifact@v2
      with:
        name: artifact
        path: dist

    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@v1.8.10
      with:
        user: ${{ (inputs.test == 'true' && inputs.test_user) || inputs.user }}
        password: ${{ (inputs.test == 'true' && inputs.test_password) || inputs.password }}
        repository_url: ${{ (inputs.test == 'true' && inputs.test_repository_url) || inputs.repository_url }}
        verify_metadata: ${{ inputs.verify_metadata }}
        skip_existing: ${{ inputs.skip_existing }}
        verbose: ${{ inputs.verbose }}