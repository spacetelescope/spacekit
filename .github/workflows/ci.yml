# GitHub Actions workflow for testing and continuous integration.
# This file performs testing using tox and tox.ini to define and configure the test environments.

name: CI

on:
  push:
    branches:
    - main
  #  tags: # run CI if specific tags are pushed
  pull_request:
    branches: # only build on PRs against 'main' if you need to further limit when CI is run.
    - develop

jobs:
  # Github Actions supports ubuntu, windows, and macos virtual environments:
  # https://help.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners
  unit_tests:
    name: ${{ matrix.name }} on ${{ matrix.os }}
    runs-on: ${{ matrix.runs-on }}
    env:
      TF_CPP_MIN_LOG_LEVEL: 2
      LD_LIBRARY_PATH: /usr/local/lib
    strategy:
      fail-fast: true
      matrix:
        runs-on:
          - ubuntu-latest
          - macos-latest
          - windows-latest

        include:
          - name: python 3.9 unit tests
            os: ${{ matrix.runs-on }}
            toxenv: py39

          # - name: python 3.10 tests
          #   os: ${{ matrix.runs-on }}
          #   toxenv: py310

          - name: python 3.11 tests
            os: ${{ matrix.runs-on }}
            toxenv: py311

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up python on ${{ matrix.os }}
        uses: actions/setup-python@v4

      - name: Install base dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install .[x,test]
      - name: Run unit tests
        run:
          pytest

  ci_tests:
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - 3.11
        include:
          - name: Code style checks
            toxenv: check-style

          - name: Security audit
            toxenv: check-security

          - name: PEP 517
            toxenv: pep517

          - name: Build Docs
            toxenv: build-docs

          - name: Build dist
            toxenv: build-dist

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install base dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox
    - name: Test with tox
      run: |
        tox -e ${{ matrix.toxenv }}

    # # Activate your repo on codecov.io first.
    # - name: Upload coverage to codecov
    #   if: "contains(matrix.toxenv, '-cov')"
    #   uses: codecov/codecov-action@v1
    #   with:
    #     file: ./coverage.xml
